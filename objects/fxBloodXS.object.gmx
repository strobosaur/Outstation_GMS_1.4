<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sfxRed32</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INIT BLOOD

    image_alpha = 0.85;
//    size = 1 - random(0.05);
    dec = (0.675 + rnd(0, 0.15)) // / size;
    dir = random(360);
    dirc = 0 //rnd(0, 3);
    len = 4.5 + rnd(0, 1.5);
    lenr = random(len * 0.95);
    
    image_xscale = (3 / sprite_get_width(sprite_index)) + rnd(0, (1.5 / sprite_get_width(sprite_index)))//(0.08 + rnd(0, 0.055)) //* (size * size);
    image_yscale = image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MOVE &amp; SPLATTER

    // DRAW TO SURFACE
    if instance_exists(spawn_control)
    {
        make_decal(sys_fx_control.blood_surf);
    }
    
    // SCALE
    image_xscale *= dec;
    image_yscale = image_xscale;
    
    var rdir = irandom(360);
    var rx = lengthdir_x(lenr, rdir);
    var ry = lengthdir_y(lenr, rdir);
    
    // MOVE
    x += lengthdir_x(len + lenr, dir) + rx;
    y += lengthdir_y(len + lenr, dir) + ry;
    
    len *= dec;
    lenr = random(len * 0.95);
    dir += dirc;
    
    
    // KILL
    if len &lt;= 0.5 { instance_destroy(); }
    if image_xscale &lt; (1 / sprite_get_width(sprite_index)) { instance_destroy(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
