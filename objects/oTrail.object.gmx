<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INIT TRAIL

    xx = x;
    yy = y;
    
    decr = 0;
    hit_mixed = 0;
    col_mixed = 0;
    rate = 0;
    count = 0;
    hue = random(255);
    hued = random(35);
    sat = random(255);
    satd = random(35);
    val = random(255);
    vald = random(255);
    col = make_colour_hsv(hue, sat, val);
    depth = -y;
    ymod = 0;
    alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UPDATE TRAIL

    depth = -y;

    x = rnd(xx, 2);
    y = rnd(yy, 2);
    
    var time = global.time;
    
    col_mixed = 0.65 + random(0.25);

    var nhue = clamp(pulse_mid(rate, hued, hue), 0, 255);
    var nsat = clamp(pulse_mid(rate, satd, sat), 0, 255);
    var nval = 255;
    
    col = make_colour_hsv(nhue, nsat, nval);
    
    if random(1) &lt; image_alpha { visible = !visible; }
//    if random(1) &lt; (death - count) / death { visible = !visible; }
    
    image_alpha -= decr
    
    if image_alpha &lt;= 0 { instance_destroy(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SHADER

    // HIT MIXER
    if hit_mixed &gt; 0
    {
        shader_set(shMix);
        var mix_u = shader_get_uniform(shMix, "u_vMix");
        shader_set_uniform_f(mix_u, hit_mixed);
        draw_self();
        shader_reset();
    }
    else
    {
        draw_self();
    }
    
    // COLOR MIXER
    if col_mixed &gt; 0
    {
        sh_colors(col, col_mixed);
    }    
    else
    {
        draw_self();
    }
        
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
