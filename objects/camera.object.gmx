<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INIT CAMERA

    player = 0;

    // MAKE TARGET MAP
    target = ds_map_create();
    
    target[? "x"] = 0;
    target[? "y"] = 0;
    
    target[? "ls spot x"] = 0;
    target[? "ls spot y"] = 0;
    target[? "ls len"] = 64;
    target[? "ls close"] = 1;
    
    target[? "rs spot x"] = 0;
    target[? "rs spot y"] = 0;
    target[? "rs len"] = 80;
    target[? "rs close"] = 1;
    
    close = 0.45;
    
    // MOVESPEED    
    spd = 0.05;
    
    // TARGET
//    player = global.leader;
    
    // SET VIEW POSITION
    
    view_xview[0] = round(x - view_wview[0]/2);
    view_yview[0] = round(y - view_hview[0]/2);
    
    view_object[0] = id;
    view_hborder[0] = 0;
    view_vborder[0] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DESTROY DS

    ds_map_destroy(target);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MOVE TO SPOT
    
    // LEADER EXISTS?
    if instance_exists(global.leader)
    &amp;&amp; global.leader != noone
    {
        get_input();
        
        player = global.leader;
         
        // IF PLAYER IS AIMING
        if player.state == player_aiming
        {   
            var wpn_range = player.eq_wpn[?"range"] + check_bonus_list(player.attack_modifier_list, "range", player);
            target[?"x"] = player.x + lengthdir_x(wpn_range, player.dir);
            target[?"y"] = player.y + lengthdir_y(wpn_range, player.dir);
        }
        // IF PLAYER MENU, LEN = 0
        else if player.state == player_equip_state
        || player.state == player_choose_item
        || player.state == player_attributes_state
        || player.state == player_choose_active
        || player.state == player_choose_skill
        {
            target[?"ls close"] = 0;
            target[?"rs close"] = 0;
            spd = 0.085
        }
        // RIGHT STICK BLOCKED: CENTER ON PLAYER
        else if global.leader.RS_menu_block == true
        {
            target[?"x"] = player.x;
            target[?"y"] = player.y;
            target[?"ls spot x"] = player.x;
            target[?"ls spot y"] = player.y;
            target[?"rs spot x"] = player.x;
            target[?"rs spot y"] = player.y;
            target[?"ls close"] = 0;
            target[?"rs close"] = 0;
            spd = 0.085
        }
        // STICKS
        else
        {
            // TARGET
            target[?"ls close"] = 1;
            target[?"rs close"] = 1;
            spd = 0.04
                
            // RIGHT STICK
            if RSamp &gt; 0
            {
                target[?"x"] = lerp(global.leader.x, global.leader.x + lengthdir_x(target[?"rs len"]*RSamp, RSdir), target[?"rs close"]);
                target[?"y"] = lerp(global.leader.y, global.leader.y + lengthdir_y(target[?"rs len"]*RSamp, RSdir), target[?"rs close"]);
            }
            // LEFT STICK
            else if LSamp &gt; 0
            {
                target[?"x"] = lerp(global.leader.x, global.leader.x + lengthdir_x(target[?"ls len"]*LSamp, LSdir), target[?"ls close"]);
                target[?"y"] = lerp(global.leader.y, global.leader.y + lengthdir_y(target[?"ls len"]*LSamp, LSdir), target[?"ls close"]);
            }
            // NO STICK, CENTER ON PLAYER
            else
            {
                target[?"x"] = global.leader.x;
                target[?"y"] = global.leader.y;
            }
        }
    }
    
    // MOVE VIEW
    if point_distance(x, y, target[?"x"], target[?"y"]) &gt; 4
    {
        x = round(lerp(x, target[? "x"], spd));
        y = round(lerp(y, target[? "y"], spd));
    }
    else
    {
        x = target[?"x"];
        y = target[?"y"];
    }

    // UPDATE VIEW POSITION
    view_xview = round((x-view_wview[0]/2));
    view_yview = round((y-view_hview[0]/2));
    
    // STAY INSIDE ROOM
    view_clamp(0);
    pos_clamp(view_wview div 2, view_hview div 2, room_width - view_wview div 2, room_height - view_hview div 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MOVE

    // STICK MOVE VIEW
/*    get_input();
    // TARGET
//    if instance_exists(global.leader) { player = global.leader; }
    // PLAYER DEAD
    if is_undefined(global.leader)
    {
    
        target[? "x"] += (LSX * 3);
        target[? "y"] += (LSY * 3);    
    }
    else
    {
        // FIND TARGET
        if instance_exists(global.leader)
        {
            
            // FIND TARGET SPOT
            target[? "x"] = lerp(global.leader.x, oCross.x, close);
            target[? "y"] = lerp(global.leader.y, oCross.y, close);
            
        } else {
            get_input();
        
            target[? "x"] += (LSX * 3);
            target[? "y"] += (LSY * 3);    
        }
    }
    
    // SCREENSHAKE?
    
//    if global.shake &gt; 0 || global.xshake &gt; 0 {shake_cam();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DESTROY VIEW

    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
