<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// INIT

    wave_len = 0;
    wave_spd = 0;
    wave_dist = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UPDATER

    var dir = random(360);
    var xx = x;
    var yy = y;

    // INREASE DISTANCE
    wave_len += wave_spd;
    
    // CREATE DUST WAVE
    repeat(floor(wave_len/4))
    {
        dir = random(360);
        
        xx = x + lengthdir_x(wave_len, dir);
        yy = y + lengthdir_y(wave_len, dir);
        
        // FLASHING PUFF
        with instance_create(xx, yy, fxPuff)
        {
            is_flashing = true;
        }
        
        // RANDOMLY SHADOW PUFF
        if irandom(1) == 0
        {
            with instance_create(xx, yy+1, fxPuff)
            {
                sprite_index = choose(sfxPuff05_dark);
                image_index = 0;
                ymod *= 0.66;
                image_index = 0;
                shadow_sprite = sfxPuff05_dark_shadow;
            }
        }
        
        // NEW COORDS FOR BLAST
        dir = random(360);
        
        xx = x + lengthdir_x(wave_len, dir);
        yy = y + lengthdir_y(wave_len, dir);
        
        // BLAST
        with instance_create(xx, yy, fxPuff)
        {
            sprite_index = sfxBoom32;
            image_xscale = image_scale_pixels(rnd(14, 4), sfxBoom32) * (0.5 + (0.5 * clamp((1 / other.wave_len),0,1)));
            image_yscale = image_xscale;
            image_speed = rnd(0.75, 0.15);
        }
    }
    
    // DESTROY IF DISTANCE REACHED
    if wave_len &gt; wave_dist
    {
        instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
