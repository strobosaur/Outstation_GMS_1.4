<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INIT SPRITE SHEET

    act = IDLE;
    face = RIGHT;
    changed = true;
    image_speed = 1 / (4 + irandom(2))//rnd(0.125, 0.0625);
    animating = false;
    
    // TIMER INIT
    for (var i = 0; i &lt; timer.stop; i++)
    {
        timers[i] = 0;
    }
    
    // SPRITES
    sprite = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// FOLLOW

    x = owner.x + xx;
    y = owner.y + yy;    
    
    if owner.face == UP
    {
        depth = owner.depth + 1;
    }
    else
    {
        depth = owner.depth - 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UPDATER

    // CHECK OWNER
    if !instance_exists(owner) { instance_destroy(); }

    // SPRITE
    if !is_undefined(owner.eq_wpn)
    {
        sprite = global.wspr[owner.eq_wpn[? "wspr"]];
    }
    // FACE
    face = owner.face;
    
    // TIMERS
    if timers[timer.anim01] &gt; 0 
    { 
        timers[timer.anim01]--; 
    }
    else
    {
        act = IDLE;
    }
    
    // UPDATE SPRITE
    if timers[timer.anim01] &lt;= 0
    {
        act = owner.act;
        sprite_index = sprite[face, act];
    
        if owner.act == FIGHT
        || act == FIGHT
        {
            image_speed = 0.5//0.75;
            var frames = sprite_get_number(sprite[face, FIGHT]);
            timers[timer.anim01] = round(frames / 0.5);
            animating = true;
        }
    }
    
    // WEAPON TRAIL
    if timers[timer.anim01] &gt; 0 &amp;&amp; owner.eq_wpn[? "melee"] == true
    {
//        trail_hue(0.25, 1.25, 165);
    }
    
    // HAS SPRITE?
    if sprite == 0
    {
        visible = false;
    }
    else
    {
        visible = true;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// FLASH SHADER

    if sprite != 0
    {
        if is_array(sprite)
        {
            if timers[timer.anim01] &gt; 0
            {
                var mix = random(0.5) + (0.25 * (timers[timer.anim01] mod 2));
                shader_set(shMix);
                var mix_u = shader_get_uniform(shMix, "u_vMix");
                var mix = random(0.25) + (random(0.75 * owner.eq_wpn[? "melee"]) * (timers[timer.anim01] mod 2));
                shader_set_uniform_f(mix_u, mix);
                draw_self();
                shader_reset();
            }
            else
            {
                draw_self();
            }
        }
        
        // HIT FLASH
        if owner.timers[timer.flash] &gt; 0
        {
            shader_set(shMix);
            var mix_u = shader_get_uniform(shMix, "u_vMix");
            var mix = owner.chosen_mix * 0.5;
            shader_set_uniform_f(mix_u, mix);
            draw_self();
            shader_reset();
        }
        
        // CHOSEN FLASH
        if owner.chosen_mix == true
        {
            shader_set(shMix);
            var mix_u = shader_get_uniform(shMix, "u_vMix");
            var mix = owner.chosen_mix * 0.5;
            shader_set_uniform_f(mix_u, mix);
            draw_self();
            shader_reset();
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
