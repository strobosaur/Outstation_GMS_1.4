<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGrenade01</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_flying</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// BOOM

    if !instance_exists(shooter)
    {
        shooter = id;
    }
    
    var wp_knock = eq_wpn[? "knock"] + check_bonus_list(shooter.attack_modifier_list, "knock", shooter);
    var wp_suppr = eq_wpn[? "suppr"] + check_bonus_list(shooter.attack_modifier_list, "suppr", shooter)
    var wp_shock = eq_wpn[? "shock"] + check_bonus_list(shooter.attack_modifier_list, "shock", shooter);
    
    var wp_splash = eq_wpn[? "splash"] + check_bonus_list(shooter.attack_modifier_list, "splash", shooter);
    var wp_radius = eq_wpn[? "radius"] + check_bonus_list(shooter.attack_modifier_list, "radius", shooter);


    // KNOCKBACK
    make_shockwave(x, y, rnd(wp_radius, wp_radius / 10), enemy, wp_shock, wp_suppr, wp_shock);
    splash_damage(x, y, wp_radius, enemy, damage * wp_splash, 0);
    make_boom(x, y, rnd(wp_radius, wp_radius / 10))
    // BOOM?
    if explosive
    {
        // EXPLOSION
        make_explosion(x, y, wp_radius, dir, 1);
        // SHADER FLASH
        sh_chrome_shake(4, 4.5, 8, 3.5 + (damage / 350));
    }
    else
    {
        // FLASH BANG
        make_flash(x, y, wp_radius);
    }
            
    // BOOM SOUND
    audio_play_sound(choose(sndBoom03), 25, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CHECK HIT
    
    traveled += (zspd);
    
    var x2 = cx + ghspd;
    var y2 = cy + gvspd;
    
    // IF HITS WALL
    if grid_collision_line(global.bullet_grid, cx, cy, x2, y2, CELL)
    {
        var dist = point_distance(cx, cy, x2, y2);
        
        // INCREMENT TO WALL
        for (var i = 0; i &lt;= dist; i++)
        {
            // TRAIL
            if random(1) &lt; approach(0, 1, ease_in_sine((traveled + i) / 32, 0, 1, 1)) * 0.5 { part_particles_create(global.ps, x, y, global.pt_x2, 2); }
            x += lengthdir_x(1, dir);
            y += lengthdir_y(1, dir);
            
            // SMACK
            if grid_place_meeting(global.bullet_grid, x, y)
            {
                instance_destroy();
            }
        }
    }

    // TRAIL        
    for(var j = 0; j &lt; zspd; j++)
    {
        var xx = x + lengthdir_x(j, dir);
        var yy = y + lengthdir_y(j, dir);
        if random(1) &lt; approach(0, 1, ease_in_sine((traveled + j) / 32, 0, 1, 1)) * 0.5 { part_particles_create(global.ps, xx, yy, global.pt_x2, 2); }
    }
    
    event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
