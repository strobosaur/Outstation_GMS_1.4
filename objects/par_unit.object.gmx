<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT UNIT

    event_inherited();
    
    // INIT
    init_unit(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CLEANUP
    
    stats_map_cleanup();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SHADOW
    
    // SHADOW
    surface_set_target(sys_fx_control.shadow_surf);
    draw_sprite(shadow_sprite, image_index, x - view_xview, y + shadow_y - view_yview);
    surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CHECK DEATH

    // CHECK HP
    if stats_a[?"hp"] &gt; stats_a[?"hpmax"] { stats_a[?"hp"] = stats_a[?"hpmax"]; }
    // DEATH
    if stats_a[?"hp"] &lt;= 0 { instance_destroy(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TIMERS

    // UPDATE TIMERS
    update_timers();
    
    // TIMER ENDS
    timer_ends();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UPDATER

    // EXECUTE SCRIPT    
    script_execute(state);
    
    // UPDATE SPRITE    
    sprite_index = sprite[face, act];
    
    // UPDATE DEPTH
    depth = -y;
        
    // MOVE    
    face = face4(max(0,dir));
    
    // SHELLSHOCK
    is_shellshocked();
    
    len = supmod * shockmod * approach(len, spd * (stats_a[?"move speed"]), global.inertia*1.5);
    
    hspd = approach(hspd, lengthdir_x(len, mdir), global.inertia);
    vspd = approach(vspd, lengthdir_y(len, mdir), global.inertia);
    
    move(hspd, vspd);
    
    // STAY INSIDE ROOM
    inside_boundary(0, 0, room_width, room_height);
    
    // UPDATE PATH
    update_path_to_target(round(rnd(path_time, path_time / 4)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW PATH

    if global.draw_paths
    {
        draw_set_alpha(0.25);
        draw_set_colour(c_white);
        draw_path(path, x, y, true);
        draw_set_alpha(1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// FLASH SHADER

    draw_self();

    // HIT FLASH
    if timers[timer.flash] &gt; 0
    {
        shader_set(shMix);
        var mix_u = shader_get_uniform(shMix, "u_vMix");
        var mix = 0.5 * (timers[timer.flash] / 45);
        shader_set_uniform_f(mix_u, mix);
        draw_self();
        shader_reset();
    }
    
    // CHARGE FLASH
    if timers[timer.charge01] &gt; 0
    {
        shader_set(shMix);
        var mix_u = shader_get_uniform(shMix, "u_vMix");
        var mix = rnd(0.35, 0.25);
        shader_set_uniform_f(mix_u, mix);
        draw_self();
        shader_reset();
    }
    
    // CHOSEN MIXER
    if timers[timer.chosen01] &gt; 0 
    &amp;&amp; timers[timer.chosen02] == 0
    {
        timers[timer.chosen02] = 3;
        chosen_mix = !chosen_mix;
    }
    
    if timers[timer.chosen01] == 0
    {
        chosen_mix = false;
    }
    
    if chosen_mix == true
    {
        shader_set(shMix);
        var mix_u = shader_get_uniform(shMix, "u_vMix");
        var mix = chosen_mix * 0.5;
        shader_set_uniform_f(mix_u, mix);
        draw_self();
        shader_reset();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
