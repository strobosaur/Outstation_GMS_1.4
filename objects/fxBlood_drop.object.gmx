<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT BLOODFLY

    dir = random_range(70, 110);
    
    up_force = rnd(1.1, 0.4);
    z_val = y + rnd(0, 4);
    z_grav = 0;
    grav = 0.0215;
    
    dead = false;
    
    decr = 0.9875 + rnd(0, 0.0075);
//    size = 2 + rnd(0, 0.5);
        sprite_index = sfxRedpx2b;
    
/*    var size = irandom(1);
    if size == 0
    {
        sprite_index = sfxRedpx1b;
    }
    else
    {
        sprite_index = sfxRedpx2b;
    }
    
//    up_force *= ((size + 2.5) / 2.5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UPDATE

    depth = z_val * -1;
    
    
    // GRAVITY
    if dead == false
    {
        // MOVEMENT
        
        var cx = lengthdir_x(up_force, dir);
        var cy = lengthdir_y(up_force, dir);
        
        cy += z_grav;
        
        z_grav += grav;
        
        x += cx;
        y += cy;
        
        image_xscale *= decr;
        image_yscale = image_xscale;
    }
    
    // HITS GROUND
    if (y &gt;= z_val) &amp;&amp; (z_grav &gt; up_force) &amp;&amp; (dead == false)
    {
        dead = true;
        instance_destroy();
    }
    
    if image_xscale &lt; (1 / sprite_get_width(sprite_index)) { instance_destroy(); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.800000011920929</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.100000001490116</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
